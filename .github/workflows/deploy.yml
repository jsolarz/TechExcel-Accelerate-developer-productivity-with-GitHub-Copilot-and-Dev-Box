# The overall workflow name will be Azure Bicep. This will show up in the
# GitHub Action page.
name: Azure Bicep

# We only want to run this script manually.
on: workflow_dispatch

# Environment variables are defined in an "env" section.
# We set the target environment to dev.
# Open the deploy-advanced.yml file to see how we can accept user input
# instead of needing to change this file to switch environments.
env:
  targetEnv: dev

jobs:
  # This script has one job: build and deploy the IaC resources
  build-and-deploy:
    # We run this on an Ubuntu-based GitHub hosted runner. This hosted runner
    # has certain software already installed, including az cli
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    # Check out the code. This grabs code from the repository and
    # makes it available to the GitHub hosted runner. It will usually be the
    # first task for any workflow
    steps:
      # Checkout code
      - uses: actions/checkout@main

        # Log into Azure using a federated credential. We have already set up the
        # federation process in a prior step, so we need to pass in the following:
        # Client ID = Application registration ID
        # Tenant ID = Application owner organization ID (previously called Tenant ID in Azure)
        # Subscription ID
        # https://github.com/azure/login
      - uses: azure/login@v2.1.1
        with:
          client-id: 8900b0a3-4ae1-4e66-9045-c1e8f9195edf
          tenant-id: 16b3c013-d300-468d-ac64-7eda0820b6d3
          subscription-id: 3d21fb7f-6d4a-439b-b6d8-388bcf74d1d8
          # We also need to ensure that enable-AzPSSession is true. This is important for
          # using OIDC in Azure. If we were to pass in a client secret instead, we would not need
          # this setting enabled
          enable-AzPSSession: true

        # Deploy ARM template
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./src/InfrastructureAsCode/main.bicep
          # Use the environment variable called targetEnv
          parameters: environment=${{ env.targetEnv }}
